{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.scss","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/date.service.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/load.service.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.scss","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/modeles/Constants.ts","webpack:///./src/app/monitor/monitor.component.html","webpack:///./src/app/monitor/monitor.component.scss","webpack:///./src/app/monitor/monitor.component.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/statistics/statistics.component.html","webpack:///./src/app/statistics/statistics.component.scss","webpack:///./src/app/statistics/statistics.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div>\\n    <h3 font=\\\"bold\\\">What it is ? </h3>\\n    <p>Create a simple web application that monitors load average on your machine:</p>\\n    <ul>\\n        <li>Collect the load averages of your system (see examples below)</li>\\n        <li>Display in the application the key statistics as well as a history of load \\n          over the past 10 minutes in 10s intervals. We’d \\n          suggest a graphical representation like a timeseries. Make it easy for the end-user to \\n          picture the situation!\\n        </li>\\n        <li>Make sure a user can keep the web page open and monitor the load on their machine.</li>\\n        <li>Whenever the load for the past 2 minutes exceeds 1 on average, add a message saying that \\\"High load generated an alert - load = value, triggered at time\\\"</li>\\n        <li>Whenever the load average drops again below 1 on average for the past 2 minutes, Add another message explaining when the alert recovered.</li>\\n        <li>Make sure all messages showing when alerting thresholds are crossed remain visible on the page for historical reasons.</li>\\n        <li> Write a test for the alerting logic</li>\\n        <li>Explain how you’d improve on this application design</li>\\n        <li>This exercise is oriented towards showcasing your frontend skills, there is no need for advanced backends capable of persisting data</li>\\n      </ul>\\n\\n      <h3> Personal Notes: </h3>\\n\\n      <p>The application gets one load data every 10 minutes from the flask service.</p> \\n      <p>If the flask service has not been on for long enough prior to loading the application, there will not be anough data to \\n        fill the window so the data will just keep being appended to the graph until the window size is reached. After, the window \\n        will start sliding to allow new data to come in. \\n      </p>\\n      <p> By default, the window spans 10 minutes or 10 * 6 = 60 points but this can be modifies in the \\\"Window Size\\\" inbox \\n          below the graph. Also, the default value for the alert threshold is 1 but this can also be modified, for instance \\n          decreasing this value is a good way of testing the feature (as a average value of 1 is not necessarily reached very often ...).\\n      </p>\\n      <p>\\n        The alert is based on the average of the last 2 minutes, if there are not enough data - let's say, we just turned the service on - \\n        we will consider the max(available points, 2 min points).\\n      </p>\\n      \\n      <p>Above the graph are some basic statistics of the current data being displayed. </p>\\n\\n      <h3> Improvements on UI: </h3>\\n\\n      <ul>\\n        <li> Login ? </li>\\n        <li> More control over the backend from the UI: choose the interval, less or more than 10 seconds</li>\\n        <li> Additional statistics or more data ...</li>\\n      </ul>\\n\\n</div>\\n\"","module.exports = \"div {\\n  font-size: 13px; }\\n  div li {\\n    padding: 6px 0 6px 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9xdWVudGluL0RvY3VtZW50cy9Db2RlL0RhdGFkb2cvRnJvbnRlbmQvbG9hZC1tb25pdG9yaW5nL3NyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFlLEVBQUE7RUFEbkI7SUFJUSxvQkFBb0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xuICAgIGZvbnQtc2l6ZTogMTNweDtcblxuICAgIGxpIHtcbiAgICAgICAgcGFkZGluZzogNnB4IDAgNnB4IDA7XG4gICAgfVxuXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MonitorComponent } from './monitor/monitor.component';\nimport { AboutComponent } from './about/about.component'\n\nconst routes: Routes = [\n  {path: '', component: MonitorComponent},\n  {path: 'about', component: AboutComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash:true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-nav></app-nav>\\n<section>\\n    <router-outlet></router-outlet>\\n</section>\\n<app-footer></app-footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'load-monitoring';\n}\n","import { BrowserModule } from '@angular/platform-browser';\n// import { Routes, RouterModule } from '@angular/router';\nimport { NgModule} from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { PlotlyModule } from 'angular-plotly.js';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MonitorComponent } from './monitor/monitor.component';\nimport { FooterComponent } from './footer/footer.component'\n\nimport { LoadService } from './load.service'\nimport { MessageService } from './message.service'\nimport { DatePipe } from '@angular/common';\nimport { AboutComponent } from './about/about.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\nimport { DateService } from './date.service'\nimport { NavComponent } from './nav/nav.component';\n\n// const routes: Routes = [\n//   {path: '', component: MonitorComponent},\n//   {path: 'about', component: AboutComponent},\n// ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MonitorComponent,\n    AboutComponent,\n    MessagesComponent,\n    StatisticsComponent,\n    FooterComponent,\n    NavComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    PlotlyModule,\n    FormsModule,\n    AppRoutingModule\n\n  ],\n  providers: [LoadService, DatePipe, MessageService, DateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { DatePipe } from '@angular/common'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  constructor(private datepipe: DatePipe) { }\n\n  toTime(date: string){\n    return new Date(date).getTime()\n  }\n\n  toString(date: string, format:string){\n    return this.datepipe.transform(date, format);\n  }\n\n}\n","module.exports = \"<footer>\\n  <div class=\\\"footer-container\\\">\\n      Made by Quentin Jost\\n  </div>\\n</footer>\\n\"","module.exports = \"footer {\\n  background: #7700FF;\\n  color: white;\\n  height: 30px;\\n  position: fixed;\\n  left: 0;\\n  bottom: 0;\\n  width: 100%;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9xdWVudGluL0RvY3VtZW50cy9Db2RlL0RhdGFkb2cvRnJvbnRlbmQvbG9hZC1tb25pdG9yaW5nL3NyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLGVBQWU7RUFDZixPQUFPO0VBQ1AsU0FBUztFQUNULFdBQVc7RUFDWCxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb290ZXIge1xuICAgIGJhY2tncm91bmQ6ICM3NzAwRkY7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGhlaWdodDogMzBweDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { interval, Observable, BehaviorSubject, Subject, throwError} from 'rxjs'\nimport { map, flatMap, catchError, retry, takeUntil } from 'rxjs/operators'\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Load } from './modeles/load'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadService {\n\n  constructor(private http: HttpClient) { }\n\n  // list of data currently in the window to send to statistic comp\n  loadsList = new BehaviorSubject<Load[]>([])\n  cast = this.loadsList.asObservable();\n\n  // stop calling the rest service when the monitor is not displayed\n  stopLooper = new Subject();\n\n  // append loadsList\n  newLoads(loads: Load[]){\n    this.loadsList.next(loads);\n  }\n\n  // get ONE last value of laod\n  getLiveLoad(): Observable<Load> {\n    return this.http.get<Load>('http://localhost:5000/get_load').pipe(\n      retry(3),\n      catchError(err => this.handleError(err)),\n    )\n  }\n\n  // get multiple loads\n  getLastLoads(minutes:number): Observable<Load[]> {\n    return this.http.get<Load[]>('http://localhost:5000/get_loads/' + minutes).pipe(\n      retry(3),\n      catchError(err => this.handleError(err)),\n    )\n  }\n\n  // initiate the looper that will request one load to the rest service every 10 secondes \n  getDataAtInterval(){\n    return  interval(1000*10).pipe(\n      takeUntil(this.stopLooper),\n      flatMap(() => {return this.getLiveLoad()})\n    )\n  }\n\n  // kill the looper \n  killLooper(){\n    this.stopLooper.next()\n  }\n  \n\n  handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs'\nimport { ALERT_THRESHOLD } from './modeles/Constants'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  messageThreshold = new BehaviorSubject<number>(ALERT_THRESHOLD)\n  cast = this.messageThreshold.asObservable();\n\n  isAlertOn = new BehaviorSubject<boolean>(false)\n  castAlert = this.isAlertOn.asObservable()\n\n  // to communicate threashold level between statistics and monitor componenent \n  newThreshold(value: number){\n    this.messageThreshold.next(value);\n  }\n\n  // to keep the status of the alert when the monitor component is destroyed\n  newAlertStatus(bool: boolean){\n    this.isAlertOn.next(bool)\n  }\n \n  add(message: string) {\n    this.messages.push(message);\n  }\n \n  clear() {\n    this.messages = [];\n  }\n}\n","module.exports = \"<h4 align=\\\"center\\\">Messages</h4>\\n\\n<div *ngIf=\\\"messageService.messages.length\\\" class=\\\"message-container\\\">\\n\\n    <ul>\\n        <li *ngFor='let message of messageService.messages'> \\n            {{message}}\\n        </li>\\n    </ul>\\n\\n    <div class=\\\"button\\\">\\n        <button class=\\\"clear\\\" (click)=\\\"messageService.clear()\\\">clear</button>\\n    </div> \\n\\n</div>\"","module.exports = \".message-container {\\n  font-size: 13px;\\n  margin-top: 4em; }\\n\\nul {\\n  font-size: 1em; }\\n\\n.button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9xdWVudGluL0RvY3VtZW50cy9Db2RlL0RhdGFkb2cvRnJvbnRlbmQvbG9hZC1tb25pdG9yaW5nL3NyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUduQjtFQUNJLGNBQWMsRUFBQTs7QUFHbEI7RUFDSSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbWVzc2FnZXMvbWVzc2FnZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVzc2FnZS1jb250YWluZXJ7XG4gICAgLy8gYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIG1hcmdpbi10b3A6IDRlbTtcbn1cblxudWwge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xufVxuXG4uYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","export const DEFAULT_WINDOW_SIZE = 10\nexport const ALERT_THRESHOLD = 1","module.exports = \"\\n<div class=\\\"monitor-container\\\">\\n    <div>\\n        <app-statistics></app-statistics>\\n        <div #graph id=\\\"graph\\\" (window:resize)=\\\"onResize()\\\"></div>\\n        <nav class=\\\"parameters-container\\\">\\n            <div>\\n                <label>Window Size (min):\\n                    <input [(ngModel)]=\\\"windowSize\\\">\\n                </label>\\n                <button (click)=\\\"updateWindow()\\\">Resize</button>\\n            </div>\\n            <div>\\n                <label>Alert Threshold:\\n                    <input [(ngModel)]=\\\"alertThreshold\\\">\\n                </label>\\n                <button (click)=\\\"updateThreshold()\\\">Apply</button>\\n            </div>\\n        </nav>\\n    </div>\\n    <div>\\n        <app-messages></app-messages>\\n    </div> \\n    \\n</div>\\n\\n\"","module.exports = \".monitor-container {\\n  display: grid;\\n  grid-template-columns: 75% 25%;\\n  grid-gap: 1em; }\\n\\n.parameters-container {\\n  display: grid;\\n  grid-template-columns: 50% 50%;\\n  font-size: 13px;\\n  padding-top: 1em; }\\n\\n.parameters-container input {\\n  width: 5em; }\\n\\n#graph {\\n  border: solid black 1px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9xdWVudGluL0RvY3VtZW50cy9Db2RlL0RhdGFkb2cvRnJvbnRlbmQvbG9hZC1tb25pdG9yaW5nL3NyYy9hcHAvbW9uaXRvci9tb25pdG9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixhQUFhLEVBQUE7O0FBR2pCO0VBQ0ksYUFBWTtFQUNaLDhCQUE2QjtFQUM3QixlQUFlO0VBQ2YsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBQ0ksVUFBVSxFQUFBOztBQUdkO0VBQ0ksdUJBQXVCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb25pdG9yL21vbml0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5tb25pdG9yLWNvbnRhaW5lcntcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNzUlIDI1JTtcbiAgICBncmlkLWdhcDogMWVtO1xufVxuXG4ucGFyYW1ldGVycy1jb250YWluZXIge1xuICAgIGRpc3BsYXk6Z3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6NTAlIDUwJTtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgcGFkZGluZy10b3A6IDFlbTtcbn1cblxuLnBhcmFtZXRlcnMtY29udGFpbmVyIGlucHV0IHtcbiAgICB3aWR0aDogNWVtO1xufVxuXG4jZ3JhcGgge1xuICAgIGJvcmRlcjogc29saWQgYmxhY2sgMXB4O1xufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef, Input, OnDestroy } from '@angular/core';\nimport { LoadService } from '../load.service';\nimport { Observable, interval } from 'rxjs';\nimport { Load } from '../modeles/load'\nimport { DEFAULT_WINDOW_SIZE, ALERT_THRESHOLD} from '../modeles/Constants'\nimport { plot, extendTraces, relayout, newPlot} from 'plotly.js/dist/plotly.min.js'\nimport { DateService } from '../date.service'\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-monitor',\n  templateUrl: './monitor.component.html',\n  styleUrls: ['./monitor.component.scss']\n})\nexport class MonitorComponent implements OnInit {\n\n  @ViewChild('graph') el: ElementRef;\n\n  // data currently being displayed\n  currentData: Load[] = []\n\n  //  number of minutes being displayed\n  windowSize: number = DEFAULT_WINDOW_SIZE\n\n  // threshold for alert\n  alertThreshold: number = ALERT_THRESHOLD\n\n  constructor(private service: LoadService, private dateService: DateService, private messageService: MessageService) { }\n  \n  ngOnInit() {\n\n    // create new chart \n    this.createNewChart(this.windowSize)\n\n    // start listening to new load every 10s\n    this.service.getDataAtInterval().subscribe((data: Load) => {\n      if (data) {\n        this.extendChart(data)\n      }\n      else{\n        console.log(\"bad load received from service\")\n      }\n    })\n  }\n\n  ngOnDestroy(){\n    this.service.killLooper()\n  }\n\n  // let the message component know that the threshold has been changed\n  updateThreshold(){\n    this.messageService.newThreshold(this.alertThreshold)\n  }\n\n  // resize the window\n  updateWindow() {\n    this.createNewChart(this.windowSize)\n  }\n\n  // create chart function \n  createNewChart(window: number){\n    this.service.getLastLoads(window).subscribe((res: Load[])=> {\n      // when changing page the monitor will be reloaded but we dont want to start the graph from scratch \n      if (res) {\n        this.currentData = res;\n        this.buildChart();\n        this.service.newLoads(this.currentData);\n      }\n      else {\n        console.log(\"Bad data received from service\")\n      }\n\n    },\n    (err) => {console.log(\"Cannot create the chart!!! AIE AIE AIE\")}\n  )\n  }\n\n\n  buildChart(){\n\n    const element = this.el.nativeElement;\n    let dataX: number[]\n    let dataY: number[]\n\n    dataX = this.currentData.map((res) => this.dateService.toTime(res.time))\n    dataY = this.currentData.map((res) => {return res.value})\n\n    const data = [{\n      x: dataX,\n      y: dataY,\n    }]\n\n    const style = {\n      xaxis: {\n        type: 'date',\n        title: 'Time',\n        tickformat: '%H:%M:%S',\n      },\n      yaxis: {\n        title: 'Normalized load average'\n      },\n      margin: { t: 0 },\n      type: 'line',\n      title: 'Load monitoring'\n    }\n\n    newPlot(element, data, style)\n\n    // return for testing... basically we assume that the function provided by plotly work. \n    // we should just make sure that the input we give are good\n    return [element, data, style]\n\n    }\n\n    // add data to the current chart \nextendChart(load: Load){\n  \n  const element = this.el.nativeElement;\n  let t = this.dateService.toTime(load.time)\n  let data = {\n    x: [[t]],\n    y: [[load.value]]\n  }\n\n  extendTraces(element, data, [0])\n\n  this.currentData.push(load)\n\n  this.checkWindow()\n\n  this.service.newLoads(this.currentData)\n\n}\n\n// function to resize the chart according to the current window\ncheckWindow(){\n  const element = this.el.nativeElement;\n  while (this.currentData.length > this.windowSize * 6) {\n    let newLeft: number\n    let currentRight: number\n    newLeft = this.dateService.toTime(this.currentData.shift().time)\n    currentRight = this.dateService.toTime(this.currentData[this.currentData.length-1].time)\n    relayout(element, {\n      xaxis: {\n        type: 'date',\n        range: [newLeft, currentRight],\n        tickformat: '%H:%M:%S',\n      }\n    })\n  }\n}\n\n// to have a responsive graph \nonResize(){\n  const element = this.el.nativeElement;\n  relayout(element, {\n  width: 0.9 * 0.75 * window.innerWidth,\n  height: 0.5 * window.innerHeight\n  })\n}\n\n}\n","module.exports = \"<header>\\n  <div class=\\\"container\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"logo\\\">{{appTitle}}</a>\\n    <nav>\\n      <ul>\\n        <li><a routerLink=\\\"\\\">Monitor</a></li>\\n        <li><a routerLink=\\\"/about\\\">Read Me</a></li>\\n      </ul>\\n    </nav>\\n  </div>\\n</header>\\n\"","module.exports = \"header {\\n  background: #7700FF; }\\n  header .logo {\\n    font-weight: bold; }\\n  header nav {\\n    justify-self: right; }\\n  header nav ul {\\n      list-style-type: none;\\n      margin: 0;\\n      padding: 0; }\\n  header nav ul li {\\n        float: left; }\\n  header nav ul li a {\\n          padding: 1.5em;\\n          text-transform: uppercase;\\n          font-size: .8em; }\\n  header nav ul li a:hover {\\n            background: #8E2BFF; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9xdWVudGluL0RvY3VtZW50cy9Db2RlL0RhdGFkb2cvRnJvbnRlbmQvbG9hZC1tb25pdG9yaW5nL3NyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFtQixFQUFBO0VBRHZCO0lBSVEsaUJBQWlCLEVBQUE7RUFKekI7SUFRUSxtQkFBbUIsRUFBQTtFQVIzQjtNQVdZLHFCQUFxQjtNQUNyQixTQUFTO01BQUUsVUFBVSxFQUFBO0VBWmpDO1FBZWdCLFdBQVcsRUFBQTtFQWYzQjtVQWtCb0IsY0FBYztVQUNkLHlCQUF5QjtVQUN6QixlQUFlLEVBQUE7RUFwQm5DO1lBdUJ3QixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoZWFkZXIge1xuICAgIGJhY2tncm91bmQ6ICM3NzAwRkY7XG5cbiAgICAubG9nbyB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cblxuICAgIG5hdiB7XG4gICAgICAgIGp1c3RpZnktc2VsZjogcmlnaHQ7XG4gICAgXG4gICAgICAgIHVsIHtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgICAgIG1hcmdpbjogMDsgcGFkZGluZzogMDtcblxuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuXG4gICAgICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEuNWVtO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IC44ZW07XG5cbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAjOEUyQkZGO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  appTitle: string = \"Load monitoring web application\"\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<ul class=\\\"statistic-container\\\">\\n  <label> Average\\n    <div align=\\\"center\\\" [ngClass]=\\\"{'red':averageTrend==-1, 'green': averageTrend==1, 'black': averageTrend==0}\\\">\\n      {{runningAverage | number : '1.2-2'}}\\n    </div>\\n  </label>\\n  <label> Standart Deviation\\n    <div  align=\\\"center\\\" [ngClass]=\\\"{'red':stdTrend==-1, 'green': stdTrend==1, 'black': stdTrend==0}\\\">\\n        {{runningStd | number : '1.2-2'}}\\n    </div>\\n  </label>\\n  <label> Minimum\\n    <div  align=\\\"center\\\" [ngClass]=\\\"{'red':minTrend==-1, 'green': minTrend==1, 'black': minTrend==0}\\\">\\n        {{runningMin | number : '1.2-2'}}\\n    </div>\\n  </label>\\n  <label> Maximum\\n    <div  align=\\\"center\\\" [ngClass]=\\\"{'red':maxTrend==-1, 'green': maxTrend==1, 'black': maxTrend==0}\\\">\\n        {{runningMax | number : '1.2-2'}}\\n    </div>\\n  </label>\\n</ul>\"","module.exports = \".statistic-container {\\n  display: grid;\\n  grid-template-columns: repeat(4, 1fr);\\n  grid-gap: 1em;\\n  justify-items: center;\\n  font-size: 13px; }\\n\\n.red {\\n  color: red; }\\n\\n.green {\\n  color: green; }\\n\\n.black {\\n  color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9xdWVudGluL0RvY3VtZW50cy9Db2RlL0RhdGFkb2cvRnJvbnRlbmQvbG9hZC1tb25pdG9yaW5nL3NyYy9hcHAvc3RhdGlzdGljcy9zdGF0aXN0aWNzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBWTtFQUNaLHFDQUFxQztFQUNyQyxhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLGVBQWUsRUFBQTs7QUFPbkI7RUFDSSxVQUFVLEVBQUE7O0FBR2Q7RUFDSSxZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc3RhdGlzdGljcy9zdGF0aXN0aWNzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN0YXRpc3RpYy1jb250YWluZXJ7XG4gICAgZGlzcGxheTpncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIDFmcik7XG4gICAgZ3JpZC1nYXA6IDFlbTtcbiAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxM3B4O1xufVxuXG5sYWJlbCBkaXZ7XG4gICAgLy8gYWxpZ246IGNlbnRlcjtcbn1cblxuLnJlZCB7XG4gICAgY29sb3I6IHJlZDtcbn1cblxuLmdyZWVuIHtcbiAgICBjb2xvcjogZ3JlZW47XG59XG5cbi5ibGFjayB7XG4gICAgY29sb3I6IGJsYWNrO1xufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { LoadService } from '../load.service'\nimport { Load } from '../modeles/load'\nimport { MessagesComponent } from '../messages/messages.component';\nimport { MessageService } from '../message.service';\nimport { ALERT_THRESHOLD } from '../modeles/Constants'\nimport { DateService } from '../date.service'\nimport { Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\n\nexport class StatisticsComponent implements OnInit {\n\n  constructor(private service: LoadService, public messageService: MessageService, private dateService: DateService) { }\n\n  // to unsubscibe our service when the page is not on\n  private ngUnsubscribe = new Subject();\n\n  // current data in the window\n  currentData: Load[]\n\n  // value used to display the alert\n  averageLast2Min: number\n\n  // different statistic we want to show \n  runningAverage: number\n  runningMax: number\n  runningMin: number\n  runningStd: number\n\n  // threashold alert value\n  alertThreshold: number\n\n  // has the threshold alert been activated yet \n  isAboveThreashold: boolean\n\n  // to know the trend of the stats: values [-1, 0, 1]\n  averageTrend:number = 0\n  stdTrend:number = 0\n  minTrend:number = 0\n  maxTrend:number = 0\n\n  ngOnInit() {\n    this.messageService.castAlert.pipe(takeUntil(this.ngUnsubscribe)).subscribe((res) => {\n      this.isAboveThreashold = res;\n    })\n\n    // retrieve the data in the window from the monitor component \n    this.service.loadsList.pipe(takeUntil(this.ngUnsubscribe)).subscribe((res) => {\n      this.currentData = res\n      this.mainRoutine()\n    })\n    // retrieve the new threshold defined in the monitor component\n    this.messageService.messageThreshold.pipe(takeUntil(this.ngUnsubscribe)).subscribe((res: number) => {\n      // console.log(res)\n      this.alertThreshold = res\n    })\n  }\n\n  ngOnDestroy(){\n    this.ngUnsubscribe.next()\n    this.ngUnsubscribe.complete()\n  }\n\n  mainRoutine(){\n// Calculate all the statistics we want to display \n    if (this.currentData.length>0){\n      let values = this.currentData.map(res => res.value)\n      let valuesShort = values.slice(-12,-1)\n      this.averageLast2Min = this.average(valuesShort)\n      \n      let tempRunningAverage = this.average(values)\n      let tempRunningStd = this.standardDeviation(values)\n      let tempRunningMax = this.max(values)\n      let tempRunningMin = this.min(values)\n\n      this.averageTrend = this.trend(this.runningAverage, tempRunningAverage)\n      this.stdTrend = this.trend(this.runningStd, tempRunningStd)\n      this.minTrend = this.trend(this.runningMin, tempRunningMin)\n      this.maxTrend = this.trend(this.runningMax, tempRunningMax)\n\n      this.runningAverage = tempRunningAverage\n      this.runningStd = tempRunningStd\n      this.runningMax = tempRunningMax\n      this.runningMin = tempRunningMin\n\n      this.checkAlert()\n\n    }\n  }\n\n  checkAlert(){\n      // part where we check if the average load over the last 2 minutes exceeds the threshold \n      if (this.averageLast2Min>this.alertThreshold && !this.isAboveThreashold){\n        this.messageService.add(\"High load generated an alert - load = \" + \n        this.round(this.averageLast2Min, 2) + \", triggered at \" + this.dateService.toString(this.currentData[this.currentData.length-1].time, 'mediumTime'))\n        this.messageService.newAlertStatus(true)\n      }\n      if (this.averageLast2Min<this.alertThreshold && this.isAboveThreashold){\n        this.messageService.add(\"Load back under Threshold at \" + this.dateService.toString(this.currentData[this.currentData.length-1].time, 'mediumTime'))\n        this.messageService.newAlertStatus(false)\n      }\n  }\n\n  trend(oldValue: number, newValue: number){\n    if (newValue > oldValue) {\n      return 1;\n    }\n    else if (newValue < oldValue) {\n      return -1;\n    }\n    else {\n      return 0;\n    }\n  }\n\n  round(value, decimals) {\n    return Number(value.toFixed(decimals))\n  }\n\n  min(values){\n    return values.reduce((min, a) => {\n      if (min<a){return min}\n    else{return a}})\n  }\n\n  max(values){\n    return values.reduce((max, a) => {\n      if (max>a){return max}\n    else{return a}})\n  }\n\n  standardDeviation(values){\n    let avg = this.average(values);\n    \n    let squareDiffs = values.map(value => {\n      let diff = value - avg;\n      let sqrDiff = diff * diff;\n      return sqrDiff;\n    });\n    \n    let avgSquareDiff = this.average(squareDiffs);\n  \n    let stdDev = Math.sqrt(avgSquareDiff);\n    return stdDev;\n  }\n  \n  average(data){\n    var sum = data.reduce((sum, value) => {\n      return sum + value;\n    }, 0);\n  \n    var avg = sum / data.length;\n    return avg;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}